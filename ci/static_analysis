#!/bin/bash

set -ex

analyzer_checks=(
  alpha.core.BoolAssignment alpha.core.CallAndMessageUnInitRefArg
  alpha.core.CastSize alpha.core.Conversion alpha.core.DynamicTypeChecker
  alpha.core.FixedAddr alpha.core.IdenticalExpr alpha.core.PointerArithm
  alpha.core.PointerSub alpha.core.SizeofPtr alpha.core.TestAfterDivZero
  alpha.cplusplus.IteratorRange alpha.deadcode.UnreachableCode
  alpha.security.ArrayBound alpha.security.ArrayBoundV2
  alpha.security.MallocOverflow alpha.security.ReturnPtrRange
  alpha.security.taint.TaintPropagation alpha.unix.BlockInCriticalSection
  alpha.unix.Chroot alpha.unix.PthreadLock alpha.unix.SimpleStream
  alpha.unix.Stream alpha.unix.cstring.BufferOverlap
  alpha.unix.cstring.NotNullTerminated alpha.unix.cstring.OutOfBounds
  nullability.NullPassedToNonnull nullability.NullReturnedFromNonnull
  nullability.NullableDereferenced nullability.NullablePassedToNonnull
  nullability.NullableReturnedFromNonnull valist.CopyToSelf
  valist.Uninitialized valist.Unterminated
)

check_switches=()
for x in "${analyzer_checks[@]}"; do
  check_switches+=(-enable-checker "$x")
done

mkdir static_analysis && cd static_analysis
scan-build-8 "${check_switches[@]}" -o output \
  cmake .. -DCMAKE_BUILD_TYPE=Debug \
  -DCMAKE_PREFIX_PATH=$(realpath ../libsqreen/Debug/out/usr/local/share/cmake/libsqreen/)
scan-build-8 "${check_switches[@]}" -o output make -j
function clang_violations {
  ruby <<'EOD'
	file = Dir.glob('./output/*/index.html').first
	exit if file.nil?
	data = File.read(file)
	puts data.scan(%r{<td class="DESC">([^<]+)</td><td>(.*?[^/<]+\.[cp]+)</td>}m).
	map { |x| x.reverse.join(": ") + "\n" }
EOD
}
analyzer_violations=
IFS=$'\n' analyzer_violations=($(clang_violations))
if [[ ${#analyzer_violations[@]} -gt 0 ]]; then
  echo "Found clang analyzer violations. Failing."
  printf '%s\n' "${analyzer_violations[@]}"
  exit 1
fi
echo "No clang analyzer violations found"
