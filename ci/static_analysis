#!/usr/bin/env bash

set -eu

SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
PROJECT_DIR="$SCRIPT_DIR/.."
CMAKE_PREFIX_PATH="${CMAKE_PREFIX_PATH:-$PROJECT_DIR/build/libddwaf-out-debug/share/cmake/libddwaf}"
CMAKE_PREFIX_PATH="$(realpath "$CMAKE_PREFIX_PATH")"
echo "Using CMAKE_PREFIX_PATH: $CMAKE_PREFIX_PATH"
if [[ ! -d "$CMAKE_PREFIX_PATH" ]]; then
  echo "CMAKE_PREFIX_PATH does not exist: $CMAKE_PREFIX_PATH"
  echo "Run './gradlew buildLibddwafDebug' first or set CMAKE_PREFIX_PATH"
  exit 1
fi

SCAN_BUILD="${SCAN_BUILD:-scan-build}"

analyzer_checks=(
  security.insecureAPI.rand
  security.insecureAPI.strcpy
  nullability.NullPassedToNonnull
  nullability.NullReturnedFromNonnull
  nullability.NullableDereferenced
  nullability.NullablePassedToNonnull
  nullability.NullableReturnedFromNonnull
  valist.CopyToSelf
  valist.Uninitialized
  valist.Unterminated
)

scan_build_cmd=(
  "$SCAN_BUILD"
  --exclude
  _deps
  -o
  output
)
for x in "${analyzer_checks[@]}"; do
  scan_build_cmd+=(-enable-checker "$x")
done

mkdir -p static_analysis
cd static_analysis
"${scan_build_cmd[@]}" cmake .. \
  -DCMAKE_BUILD_TYPE=Debug \
  -DCMAKE_PREFIX_PATH="$CMAKE_PREFIX_PATH"
make clean
"${scan_build_cmd[@]}" make -j
if ls ./output/*/failures/* &> /dev/null; then
  echo "Found clang analyzer violations. Failing."
  exit 1
fi
echo "No clang analyzer violations found"
